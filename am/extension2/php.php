<?php

/**
 * Class XtmMemberProfilePage_Controller
 *
 * @property XtmMemberProfilePage dataRecord
 * @method XtmMemberProfilePage data()
 * @mixin XtmMemberProfilePage dataRecord
 */
class XtmMemberProfilePage_Controller extends MemberProfilePage_Controller
{
    /**
     * @param array $data
     * @param Form $form
     * @return bool|SS_HTTPResponse
     */
    public function save(array $data, Form $form)
    {
        /** @var Member $member */
        $member = Member::currentUser();
        $companyName = $data['Company'];
        $address = $this->prepareAddress($data);
        $xtmCustomerId = (int)$member->getField('XtmCustomerId');
        $xtmCustomerPmId = (int)$member->getField('XtmCustomerPmId');

        if (($xtmCustomerId > 0) && ($xtmCustomerPmId > 0)) {
            try {
                $result = XtmWebService::updateCustomer(['id' => $xtmCustomerId], $companyName, $address);

                if (!$result) {
                    user_error(_t('XtmMemberExtension.updateCustomerFail', 'Unable to update customer in XTM'));
                }
                $password = null;
                if (!empty($data['Password']['_PasswordFieldVisible'])) {
                    $password = $data['Password']['_Password'];
                }
                $result = XtmWebService::updateUser(['id' => $xtmCustomerPmId], $data['FirstName'], $data['Surname'],
                    $data['Username'], $address, $password);
                if (!$result) {
                    user_error(_t('XtmMemberExtension.updateCustomerFail', 'Unable to update customer in XTM'));
                }

            } catch (Exception $e) {
                $form->sessionMessage($e->getResult()->message(), 'bad');
                return $this->redirectBack();
            };

        }

        return parent::save($data, $form); // TODO: Change the autogenerated stub
    }

    /**
     * @param array $data
     * @return array
     */
    private function prepareAddress(array $data): array
    {
        $address = [
            'city'        => $data['City'],
            'street'      => $data['Address1'],
            'number'      => $data['Address2'],
            'postCode'    => $data['PostalCode'],
            'mobilePhone' => $data['Phone'],
            'country'     => $data['Country'],
            'vatNumber'   => $data['VatNumber'],
            'email'       => $data['Email']
        ];
        return $address;
    }
}
